apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

//noinspection GroovyAssignabilityCheck
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

dependencies {
    compile("com.squareup.retrofit2:retrofit:${libVersions.square.retrofit}") {
        exclude module: 'okhttp'
    }
    compile "com.squareup.retrofit2:converter-gson:${libVersions.square.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${libVersions.square.retrofit}"

    compile "com.squareup.okhttp3:okhttp:${libVersions.square.okhttp}"
    compile "io.reactivex:rxjava:${libVersions.rx.java}"
    compile 'com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:1.2.0'
    compile "joda-time:joda-time:${libVersions.jodaTime}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.1.0'
    testCompile "com.squareup.okhttp3:mockwebserver:${libVersions.square.okhttp}"
}

/**
 * Optionally disable test failures
 */
test {
    ignoreFailures = rootProject.ext.ignoreFailures
}

/**
 * This will copy resources files so they will be accessible thought Java getResource() method
 * in Android Studio, without it test won't find *.json files
 */
task copyTestResources(type: Copy) {
    from "${project.projectDir}/src/test/resources"
    into "${project.buildDir}/classes/test"
}

processTestResources.dependsOn copyTestResources