buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
        classpath 'io.fabric.tools:gradle:1.14.4'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.1'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'robolectric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {

        applicationId "pl.malopolska.smoksmog"

        minSdkVersion 15
        targetSdkVersion 21

        versionCode 1
        versionName "0.0.1"

        resConfigs "en", "pl"
        resConfigs "nodpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
    }

    buildTypes {

        debug {
            // We don't want flood Crashlytics with reports
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
    }
}

dependencies {

    provided 'com.squareup.dagger:dagger-compiler:1.2.2'

    compile 'com.squareup.dagger:dagger:1.2.2'

    compile 'com.android.support:appcompat-v7:21.0.3'

    compile('com.crashlytics.sdk.android:crashlytics:2.2.0@aar') {
        transitive = true;
    }

    /**
     * Testing
     */

    androidTestCompile 'junit:junit:4.12'

    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.2'

    androidTestCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }

    androidTestCompile 'com.squareup:fest-android:1.0.8'

    androidTestCompile 'org.mockito:mockito-core:1.10.17'
}

/**
 * Robolectric configuration
 *
 * Run tests with: ./gradlew clean test
 */

robolectric {

    include '**/*RoboTest.class'
    //exclude '**/espresso/**/*.class'

    maxHeapSize = '2048m'

    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'

    maxParallelForks = 4
    forkEvery = 150

    ignoreFailures false

    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}
