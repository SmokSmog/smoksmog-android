apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'spoon'
apply plugin: 'com.github.triplet.play'

kapt { generateStubs = true }

android {

    buildToolsVersion androidVars.buildToolsVersion
    compileSdkVersion androidVars.compileSdkVersion

    compileOptions {
        sourceCompatibility commonVars.javaVersion
        targetCompatibility commonVars.javaVersion
    }

    defaultConfig {
        applicationId "pl.malopolska.smoksmog"
        minSdkVersion androidVars.minSdkVersion
        targetSdkVersion androidVars.targetSdkVersion
        versionCode appVersionCode as Integer
        versionName appVersionName

        // For some reason Travis is working only with multi dex
        if (Boolean.parseBoolean(System.getenv("TRAVIS"))) {
            multiDexEnabled true
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //noinspection GroovyAssignabilityCheck
    signingConfigs {

        debug {
            storeFile file('debug.keystore')
        }

        release {
            storeFile new File("" + System.getenv("KEYSTORE"))
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    //noinspection GroovyAssignabilityCheck
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
        }

        release {
            if (System.getenv("KEYSTORE") != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // StringFormatInvalid - for some reason strings contain version string thats invalid
        disable 'InvalidPackage', 'StringFormatInvalid'

        abortOnError !rootProject.ext.ignoreFailures
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${libVersions.android.appCompat}"
        force 'com.google.code.findbugs:jsr305:3.0.1'
    }
}

dependencies {

    compile project(':android')

    compile "com.google.dagger:dagger:${libVersions.google.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libVersions.google.dagger}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.android.support:support-v4:${libVersions.android.appCompat}"
    compile "com.android.support:appcompat-v7:${libVersions.android.appCompat}"
    compile "com.android.support:support-v13:${libVersions.android.appCompat}"
    compile "com.android.support:design:${libVersions.android.appCompat}"
    compile "com.android.support:support-annotations:${libVersions.android.appCompat}"

    // Firebase / Google Play Services
    compile "com.google.android.gms:play-services-location:${libVersions.google.playServices}"
    compile "com.google.firebase:firebase-core:${libVersions.google.playServices}"
    compile "com.google.firebase:firebase-messaging:${libVersions.google.playServices}"
    compile "com.firebase:firebase-jobdispatcher:${libVersions.firebase.jobdispatcher}"

    compile "uk.co.chrisjenx:calligraphy:${libVersions.calligraphy}"
    compile 'pl.charmas.android:android-reactive-location:0.10@aar'
    compile 'com.github.PhilJay:MPAndroidChart:v2.1.6'
    compile "com.jonathanfinerty.once:once:${libVersions.once}" // TODO remove ?

    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }

    testCompile "junit:junit:${libVersions.junit}"
    testCompile "org.assertj:assertj-core:${libVersions.assertj}"

    androidTestCompile "junit:junit:${libVersions.junit}"
    androidTestCompile 'org.mockito:mockito-core:2.0.31-beta'
    androidTestCompile('com.android.support.test:runner:0.4.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile "com.squareup.spoon:spoon-client:${libVersions.square.spoon}"
    androidTestCompile "com.squareup.assertj:assertj-android:${libVersions.square.assertjAndroid}"
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    androidTestCompile 'org.apache.directory.studio:org.apache.commons.io:2.4'
}

spoon {
    debug = true
    ignoreFailures = rootProject.ext.ignoreFailures
}

play {
    jsonFile = new File("" + System.getenv("PLAY_JSON"))
    track = 'beta'
}

repositories {
    mavenCentral()
}

// Need to be @ the bottom
apply plugin: 'com.google.gms.google-services'
